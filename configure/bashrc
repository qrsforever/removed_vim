# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

export LANG="en_US.utf8"
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias sl='ls'

alias rm='rm -i'
alias minicom='cd /home/lidong8/Templates; sudo minicom'
alias eclimd='cd /home/lidong8/Templates; eclimd'
alias sudo='sudo env PATH=$PATH'
alias grep='grep --color=auto --exclude-dir=.svn --exclude-dir=.git --exclude=tags'
alias xsync='repo sync -cd --no-tags '

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

stty stop ''

export JAVA_HOME=/opt/android/jdk/jdk1.8.0_73
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=./:${JAVA_HOME}/lib:${JRE_HOME}/lib:/usr/share/tomcat6/lib
export ECLIPSE_HOME=/opt/eclipse/Neon3
export ANSDK_PATH=/opt/android/sdk
export ANNDK_PATH=/opt/android/ndk/ndk-r10d
export ANDROID_HOME=$ANSDK_PATH
export PATH=$ANSDK_PATH/platform-tools:$JAVA_HOME/bin:$ECLIPSE_HOME:$ANSDK_PATH/tools:$ANNDK_PATH:$PATH:~/.vim/bin:$ANSDK_PATH/build-tools/23.0.2:/opt/android/mat

xgr () {
    if [[ "$1"x == x ]]
    then
        echo "use: xgr hello [*.cpp]"
        return -1
    fi
    if [[ "$2"x == x ]]
    then
        grep -rn $1 . 
    else
        grep -rn $1 `find . -name "*.$2"`
    fi
}

alias xtmux='tmux attach -t main'
alias vi='vim'
alias 0vi='vim --noplugin'

xgv () {
    if [[ "$1"x == x ]] 
    then
        vim -g -p -f --servername QRS
        return
    fi
    vim -g -p -f --servername QRS --remote-tab-silent $@
}

alias gvi='xgv'
alias xgvi='xgv'
alias xgvim='xgv'

alias x130='ssh -p 54130 andbase@localhost'
alias adb='/opt/android/sdk/platform-tools/adb'
alias addr2line='/opt/android/ndk/ndk-r10d/toolchains/arm-linux-androideabi-4.6/prebuilt/linux-x86_64/bin/arm-linux-androideabi-addr2line'
alias addr2line64='/data/opt/android/ndk/ndk-r10d/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-addr2line'
alias ndk-stack='/opt/android/ndk/ndk-r10d/ndk-stack'

DATEFILE=`date +%Y%m%d`

if [[ ! -d /tmp/xlog/$DATEFILE ]]
then
    mkdir -p /tmp/xlog/$DATEFILE
fi
export log=/tmp/xlog/$DATEFILE
xlog () {
    file=`date +%H%M%S`
    adb wait-for-device 
    if [[ "$1"x == x ]]
    then
        adb shell logcat -b main -b events -b system -c 
        echo "exec logcat -b main -b events -b system -c"
    fi
    # adb shell logcat -b events -b main -b system -v threadtime | tee /tmp/xlog/$DATEFILE/$file.logcat
    adb shell logcat -K -b main -b events -b system -v threadtime *:V | tee /tmp/xlog/$DATEFILE/$file.logcat
}

# alias myadb='adb -s 10.57.180.91:5555'
# mylog () {
#     if [[ ! -d /tmp/xlog/$DATEFILE ]]
#     then
#         mkdir -p /tmp/xlog/$DATEFILE
#     fi
#     file=`date +%H%M%S`
#     myadb wait-for-device 
#     if [[ "$1"x == x ]]
#     then
#         myadb shell logcat -c 
#     fi
#     myadb shell logcat -v threadtime | tee /tmp/xlog/$DATEFILE/$file.txt
# }

# sudo route add -net 192.168.150.0/24  gw 192.168.150.1  


if [ -f /data/source/.descr.sh ]; then
    . /data/source/.descr.sh 
fi

if [ -f /system/source/.descr.sh ]; then
    . /system/source/.descr.sh 
fi

PATH=$PATH:/opt/010Editor;export PATH; # ADDED BY INSTALLER - DO NOT EDIT OR DELETE THIS COMMENT - 87FF8EFC-483D-BCAA-D67D-735CF60410D1 0928FB19-F8F1-27F0-BCD8-019FFC410F65
