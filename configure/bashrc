# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac
export LANG="en_US.utf8"
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar
# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac
# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt
# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias sl='ls'
alias rm='rm -i'
alias minicom='cd ~/Downloads; sudo minicom'
alias eclimd='cd ~/Templates; eclimd'
alias sudo='sudo env PATH=$PATH'
alias grep='grep --color=auto --exclude-dir=.svn --exclude-dir=.git --exclude=tags'
alias xsync='repo sync -cd --no-tags '
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

xpwd() 
{
    tt=`pwd`
    echo $tt
    export tt
}

alias 0vi='vim --noplugin'
alias vi='vim'
alias xrs='sed -i "s/\s\+$//g" `find . -maxdepth 1 -type f `'

stty stop ''

if [ -d /system/vagrant ];
then
    export VAGRANT_DOTFILE_PATH=/system/vagrant
fi

if [ ! -d /tmp/xlog ]
then
    mkdir -p /tmp/xlog
fi

# wine 中文乱码
alias wine='env LANG=zh_CN.UTF-8  wine '
alias wine64='env LANG=zh_CN.UTF-8  wine64 '

# added by Anaconda3 4.4.0 installer
# export PATH="/home/lidong/anaconda3/bin:$PATH"
# adb connect 10.75.200.36
export http_proxy=''
export https_proxy=''
export ftp_proxy=''
export socks_proxy=''

# alias adb='/system/source/mainline/m848/out/host/linux-x86/bin/adb'
alias adb='/data/opt/android/sdk/platform-tools/adb'
# svn co https://github.com/qrsforever/workspace/trunk/

# export LC_ALL=C

alias cadb1='adb disconnect; adb connect 10.58.90.55; adb root; adb remount'
alias cadb2='adb disconnect; adb connect 192.168.1.100; adb root; adb remount'

export m848=/system/source/mainline/m848
export m648=/system/source/mainline/m648
export out=/system/source/mainline/m848/out/target/product/sugarcane
alias accessory='adb shell am start -n com.stv.globalsetting/.activity.AccessoryActivity'
export PATH=$PATH:$out
export PATH=$PATH:$HOME/.cargo/bin

export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(vim {})'"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
